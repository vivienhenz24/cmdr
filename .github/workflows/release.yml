name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}

    - name: Build
      run: |
        cargo build --release --bin cmdr
        if [ "$RUNNER_OS" = "Windows" ]; then
          cp target/release/cmdr.exe cmdr-windows-x86_64.exe
        else
          cp target/release/cmdr cmdr-${{ runner.os }}-x86_64
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cmdr-${{ runner.os }}-x86_64
        path: |
          cmdr-${{ runner.os }}-x86_64*
          target/release/cmdr*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          cmdr-ubuntu-latest-x86_64/cmdr-ubuntu-latest-x86_64
          cmdr-macos-latest-x86_64/cmdr-macos-latest-x86_64
          cmdr-windows-latest-x86_64/cmdr-windows-x86_64.exe
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 